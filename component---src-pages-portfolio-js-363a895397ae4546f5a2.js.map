{"version":3,"sources":["webpack:///./src/components/projectCard.js","webpack:///./src/pages/portfolio.js","webpack:///./src/components/seo.js"],"names":["ProjectCard","_ref","github","url","title","description","tags","react_default","a","createElement","className","index_es","icon","style","display","href","target","map","tag","propTypes","PropTypes","string","isRequired","array","__webpack_require__","d","__webpack_exports__","squareImage","staticQuery","Portfolio","props","seo","gatsby_image_default","fluid","data","imageFour","childImageSharp","marginRight","imageOne","components_projectCard","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","object"],"mappings":"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","file":"component---src-pages-portfolio-js-363a895397ae4546f5a2.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport \"./projectCard.css\"\n\nconst ProjectCard = ({ github, url, title, description, tags }) => (\n  <div className=\"project-card\">\n    <div className=\"card-content\">\n      <div>\n        <div className=\"card-header\">\n          <div className=\"project-icon\">\n            <FontAwesomeIcon icon={[\"fal\", \"folder-open\"]} />\n          </div>\n          <div className=\"project-links\">\n            <a\n              style={{ display: github ? \"block\" : \"none\" }}\n              href={github}\n              target=\"_blank\"\n            >\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n            </a>\n            <a\n              style={{ display: url ? \"block\" : \"none\" }}\n              href={url}\n              target=\"_blank\"\n            >\n              <FontAwesomeIcon icon={[\"far\", \"external-link\"]} />\n            </a>\n          </div>\n        </div>\n        <h3 className=\"card-title\">{title}</h3>\n        <span className=\"card-description\">{description}</span>\n      </div>\n      <span className=\"card-tags\">\n        {tags.map(tag => {\n          return <span>{tag}</span>\n        })}\n      </span>\n    </div>\n  </div>\n)\n\nProjectCard.propTypes = {\n  github: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired,\n}\n\nexport default ProjectCard\n","import React from \"react\"\n\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport SEO from \"../components/seo\"\nimport ProjectCard from \"../components/projectCard\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport \"./portfolio.css\"\n\nexport const squareImage = graphql`\n  fragment squareImage on File {\n    childImageSharp {\n      fluid(maxWidth: 600) {\n        ...GatsbyImageSharpFluid_noBase64\n      }\n    }\n  }\n`\n\nexport const staticQuery = graphql`\n  query {\n    imageOne: file(relativePath: { eq: \"ucsbMapIphoneImage.png\" }) {\n      ...squareImage\n    }\n    imageTwo: file(relativePath: { eq: \"ivEmergencyDispatchImage.png\" }) {\n      ...squareImage\n    }\n    imageThree: file(relativePath: { eq: \"ucsbMapMacImage.png\" }) {\n      ...squareImage\n    }\n    imageFour: file(relativePath: { eq: \"botShadow.png\" }) {\n      ...squareImage\n    }\n  }\n`\n\nconst Portfolio = props => (\n  <div className=\"portfolio\">\n    <SEO title=\"Portfolio\" />\n    {/* <h1>Featured Projects</h1> */}\n    <h1 className=\"portfolio-header\">Featured Projects</h1>\n    <div className=\"featured-projects\">\n      <div className=\"project\">\n        <div className=\"project-image\">\n          <Img fluid={props.data.imageFour.childImageSharp.fluid} />\n        </div>\n        <div className=\"project-info\">\n          <h2 className=\"project-title\">Amazon Giveaway Bot</h2>\n          <div className=\"project-image-mobile\">\n            <Img fluid={props.data.imageFour.childImageSharp.fluid} />\n          </div>\n          <div className=\"project-details\">\n            Chrome extension built with vanilla JS and Webpack that automates\n            entry into Amazon Giveaways. Features include CAPTCHA solving,\n            customizable filters, real-time notifications, and support for\n            multiple accounts. Bypasses client side validation to enter\n            giveaways without fulfilling time intensive entry requirements.\n          </div>\n          {/* <div className=\"project-tags\">\n            <span>JS</span>\n            <span>Webpack</span>\n          </div> */}\n          <div className=\"project-links\">\n            <a\n              href=\"https://github.com/tygooch/amazon-giveaway-bot\"\n              target=\"_blank\"\n              style={{ marginRight: \"15px\" }}\n            >\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n            </a>\n            <a\n              href=\"https://github.com/tygooch/amazon-giveaway-bot\"\n              target=\"_blank\"\n            >\n              <FontAwesomeIcon icon={[\"far\", \"external-link\"]} />\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"project\">\n        <div className=\"project-info\">\n          <h2 className=\"project-title\">UCSB Map</h2>\n          <div className=\"project-image-mobile\">\n            <Img fluid={props.data.imageOne.childImageSharp.fluid} />\n          </div>\n          <div className=\"project-details\">\n            Full stack web app built with React/Redux, Leaflet.js, Java Spring\n            Boot, and MongoDB. Features a fully responsive UI, custom styled map\n            tiles, an easy to use search tool, and interior floorplans to make\n            finding rooms easier than ever. Integrates with UCSB online\n            schedules via a chrome extension, allowing students to view class\n            locations with one click.\n          </div>\n          <div className=\"project-links\">\n            <a\n              href=\"https://github.com/tygooch/ucsb-map\"\n              target=\"_blank\"\n              style={{ marginRight: \"15px\" }}\n            >\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\n            </a>\n            <a href=\"https://ucsbmap.com\" target=\"_blank\">\n              <FontAwesomeIcon icon={[\"far\", \"external-link\"]} />\n            </a>\n          </div>\n        </div>\n        <div className=\"project-image\">\n          <Img fluid={props.data.imageOne.childImageSharp.fluid} />\n        </div>\n      </div>\n    </div>\n\n    <h1 className=\"portfolio-header\">Other Projects</h1>\n\n    <div>\n      <div className=\"other-projects\">\n        <ProjectCard\n          github=\"https://github.com/tygooch/iv-emergency-map\"\n          title=\"Isla Vista Emergency Map\"\n          description=\"Real time map of emergencies reported by Santa Barbara County\n              Fire. Data is sourced from @SBCFireDispatch tweets.\"\n          tags={[\"React\", \"Express\", \"Google Maps API\", \"Twitter API\"]}\n        />\n\n        <ProjectCard\n          github=\"https://github.com/tygooch/pastebin-scraper\"\n          title=\"Pastebin Scraper\"\n          description=\"Scrapes the latest Pastebin submissions to find pastes matching a given pattern.\"\n          tags={[\"Express\", \"Puppeteer\", \"JS\", \"MongoDB\"]}\n        />\n        <ProjectCard\n          github=\"https://github.com/tygooch/amazon-account-creator\"\n          title=\"Amazon Account Creator\"\n          description=\"Puppeteer script that programatically creates Amazon Accounts. Features SMS account verification by linking accounts with a new Textnow number.\"\n          tags={[\"Express\", \"Puppeteer\", \"JS\"]}\n        />\n      </div>\n    </div>\n  </div>\n)\n\nexport default Portfolio\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `viewport`,\n          content: \"width=device-width, initial-scale=1.0, viewport-fit=cover\",\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}