{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","a","createElement","className","title","to","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","library","add","fab","fas","far","fal","Layout","children","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAAAA,EAAA,KAAAA,EAAA,KA0BeQ,UAnBG,kBAChBJ,EAAAK,EAAAC,cAAA,OAAKC,UAAU,kBACbP,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKK,MAAM,aACXR,EAAAK,EAAAC,cAAA,OAAKC,UAAU,uBACbP,EAAAK,EAAAC,cAAA,QAAMC,UAAU,8BAAhB,aACAP,EAAAK,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,qBACAP,EAAAK,EAAAC,cAAA,OAAKC,UAAU,cACbP,EAAAK,EAAAC,cAACJ,EAAA,EAAD,CAAMO,GAAG,SAASF,UAAU,aAC1BP,EAAAK,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,eAGFP,EAAAK,EAAAC,cAACJ,EAAA,EAAD,CAAMO,GAAG,aAAaF,UAAU,aAC9BP,EAAAK,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,wHCPV,SAASG,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMN,EAASG,EAATH,MAC9BO,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAf,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,eAAgB,CACdT,QAEFL,MAAOA,EACPe,cAAa,QAAUR,EAAKI,aAAaX,MACzCM,KAAM,CACJ,CACEU,KAAI,WACJC,QAAS,6DAEX,CACED,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUE,QAAQF,IAAUG,QAClC1B,MAAOuB,IAAUC,OAAOG,YAGXzB,uSCzEf0B,IAAQC,IAAIC,IAAKC,IAAKC,IAAKC,KAE3B,IAAMC,EAAS,SAAA/B,GAAA,IAAGgC,EAAHhC,EAAGgC,SAAH,OACbvB,EAAAf,EAAAC,cAACsC,EAAA,EAAD,CACEC,MAAK,YASLC,OAAQ,SAAA7B,GAAI,OAAIG,EAAAf,EAAAC,cAAA,WAAMqC,IAVxB1B,KAAA8B,KAcFL,EAAOZ,UAAY,CACjBa,SAAUZ,IAAUiB,KAAKb","file":"component---src-pages-index-js-1cd1defb4a24c1cbc747.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport \"./index.css\"\n\nconst IndexPage = () => (\n  <div className=\"home-container\">\n    <SEO title=\"Ty Gooch\" />\n    <div className=\"home-text-container\">\n      <span className=\"home-text-container-header\">DEVELOPER</span>\n      <span className=\"home-text-container-location\">SANTA BARBARA, CA</span>\n      <div className=\"home-links\">\n        <Link to=\"/about\" className=\"home-link\">\n          <span className=\"home-link-text\">LEARN MORE</span>\n        </Link>\n\n        <Link to=\"/portfolio\" className=\"home-link\">\n          <span className=\"home-link-text\">VIEW PORTFOLIO</span>\n        </Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `viewport`,\n          content: \"width=device-width, initial-scale=1.0, viewport-fit=cover\",\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\"\nimport { far } from \"@fortawesome/pro-regular-svg-icons\"\nimport { fal } from \"@fortawesome/pro-light-svg-icons\"\n\nimport \"./layout.css\"\n\nlibrary.add(fab, fas, far, fal)\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => <div>{children}</div>}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}